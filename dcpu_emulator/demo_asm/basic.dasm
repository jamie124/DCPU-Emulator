JSR device_discovery

; Find Monitor
SET A, 0xf615
SET B, 0x7349
SET C, monitor_index
JSR find_device

SET B, [video_ram]
SET A, 0
HWI [monitor_index]

:main_loop
SET B, test
JSR append_str

JSR draw_line

SET PC, main_loop


:draw_line 
SET PUSH, X
SET PUSH, Y
SET PUSH, A

MUL A, 32
ADD A, [video_ram]
SHL X, 0x8
SHL Y, 0xA				; Text color
BOR X, Y

:draw_line_loop
SET [A], [B]
BOR [A], X
ADD B, 1
ADD A, 1
IFN [B], 0
	SET PC, draw_line_loop

SET A, POP
SET Y, POP
SET X, POP
SET PC, POP

; Append string in C to B
:append_str
SET [B], 74

SET PC, POP

JSR end;


; A = device ID 1
; B = device ID 2
; C = location to store device index, or 0xffff if not found
:find_device
SET PUSH, Y
SET PUSH, Z
SET [C], 0xffff

SET Z, discovered_devices
SET I, 0

:find_device_loop
SET Y, [Z]
IFE [Y], A
IFE [Y+1], B
SET [C], I
ADD I, 1
ADD Z, 1
IFL I, 16
SET PC, find_device_loop

SET Z, POP
SET Y, POP
SET PC, POP


:device_discovery
HWN I

:device_loop
SUB I, 1
HWQ I

SET J, known_devices
SET Z, 0

:device_loop2
IFE A, [J]
	IFE B, [J+1]
		SET [discovered_devices + I], J
ADD J, 35
ADD Z, 1

IFN Z, [known_device_count]
	SET PC, device_loop2

IFE I, 0
	SET PC, POP

SET PC, device_loop


:known_devices
DAT 0xf615, 0x7349, "  X. LEM-1802 Monitor           ", 0

:known_device_count
DAT 1

:discovered_devices
DAT 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 

:test DAT			"test", 0

:video_ram
DAT 0x8000

:monitor_index
DAT 0xffff

:end
	SUB PC, 1

; Memory 
:alloc_mem

SET PC, POP

:dealloc_mem

:heap_start DAT 0xA000
:heap_end DAT 0xF000
